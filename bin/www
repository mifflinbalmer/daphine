#!/usr/bin/env node
const app = require('../app');
const debug = require('debug')('saybis.node:server');
const http = require('http');

const server = http.createServer(app);

const normalizePort = ( p ) => {
  const port = parseInt(p, 10);

  if ( !port ) {
    // named pipe
    return p;
  }

  if ( port >= 0 ) {
    // port number
    return port;
  }

  return false;
}

const onError = ( error ) => {
  if ( error.syscall !== 'listen' ) {
    throw error;
  }

  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  switch ( error.code ) {
    case 'EACCES':
      console.error(`${ bind } requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${ bind } is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

const onListening = () => {
  const a = server.address();

  const bind = typeof a === 'string' ? 'pipe ' + a : 'port ' + a.port;
  debug('Listening on ' + bind);
}

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
